

```{r}

load("~/DATA/projects/Research/r-packages/pmder/data/spectral_data.Rda")
load("~/DATA/projects/Research/r-packages/pmder/data/summary_data.Rda")
load("~/DATA/projects/Research/r-packages/pmder/data/linear_model.rda")
load("~/DATA/projects/Research/r-packages/pmder/data/earth_model.Rda")
```

```{r}




```

```{r}







    # Linear model time derivative
    lm_time_derivative =
        count_rate_data_lm |>
        ggplot() +
        geom_line(mapping = aes(
            x = y_cm,
            y = count_rate_derivative,
            color = source)) +
        facet_grid(
            cols = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))) +
        scale_color_hue(name = "Source") +
        xlab("Distance (cm)") +
        ylab("Count Rate Derivative (cps / Bq / s)") +
        ggtitle("Count Rate Derivative for\nSources Along Trajectory") +
        theme_bw() +
        theme(
            strip.background = element_rect(fill = "white"),
            legend.position = "top"),
    # Earth Model Diagnostics
    earth_diagnostics = ggarrange(
        ggarrange(
            earth_model_aug |>
                ggplot() +
                geom_histogram(
                    mapping = aes(x = .std.resid, y = after_stat(density)),
                    bins = bin_number(earth_model_aug$.std.resid)) +
                geom_line(
                    data = mutate(
                        data.frame(abscissa = -100:50 / 20),
                        ordinate = dnorm(abscissa)),
                    mapping = aes(x = abscissa, y = ordinate)) +
                xlab("Relative Residuals") +
                ylab("") +
                ggtitle(
                    "Distribution of Residuals",
                    subtitle = "Line indicates standard normal distribution") +
                theme_bw(),
            earth_model_aug |>
                ggplot(aes(sample = .resid)) +
                geom_qq() +
                geom_qq_line() +
                xlab("Quantiles of Standard Normal") +
                ylab("Quantiles of Residuals") +
                ggtitle(
                    "Quantile-Quantile Plot of Residuals",
                    subtitle = "Line indicates normal distribution") +
                theme_bw(),
            ncol = 2
        ),
        earth_model_aug |>
            ggplot() +
            geom_point(mapping = aes(
                x = .fitted,
                y = .resid,
                color = Es_keV,
                alpha = y_cm
            )) +
            facet_grid(
                rows = vars(contents),
                labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))
            ) +
            xlab("Fitted Values of Ln(Efficiency)") +
            ylab("Residuals of Ln(Efficiency)") +
            ggtitle("Residuals vs. Fitted Values") +
            scale_color_continuous(name = "Source\n\ \ \ Energy") +
            scale_alpha_continuous(name = "Distance") +
            theme_bw() +
            theme(
                legend.position = "top",
                legend.title = element_text(size=7),
                legend.text = element_text(size=7),
                strip.background = element_rect(fill = "white")
            ),
        nrow = 2
    ) |>
        annotate_figure(top = "Diagnostic Plots for MARS Model"),
    # Earth Comparison
    earth_comparison = earth_comparison,
    # Earth Model Contour Plot
    earth_count_rate =
        count_rate_data_earth |>
        ggplot() +
        # geom_linerange(mapping = aes(
        #     x = y_cm,
        #     ymin = =u_count_per_decay,
        #     ymax = u_count_per_decay,
        #     color = source)) +
        geom_line(mapping = aes(
            x = y_cm,
            y = count_rate,
            color = source)) +
        facet_grid(
            cols = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))) +
        # geom_point(
        #     data = count_rate_data_discrete,
        #     mapping = aes(x = y_cm, y = count_per_decay, color = source)) +
        # geom_pointrange(
        #     data = count_rate_data_discrete,
        #     mapping = aes(
        #         x = y_cm,
        #         y = count_per_decay,
        #         ymin = count_per_decay - u_count_per_decay,
        #         ymax = count_per_decay + u_count_per_decay,
        #         color = source),
    #     size = 0.5) +
    scale_x_continuous(
        limits = c(-1500, 1500)
    ) +
        xlab("Distance (cm)") +
        # scale_y_continuous(
        #     trans = "log10",
        #     limits = c(1e-5, 1e0),
        #     n.breaks = 7,
        #     labels = scales::trans_format("log10", scales::math_format(10^.x))) +
        ylab("Count Rate (cps / Bq)") +
        scale_color_hue(name = "Source") +
        ggtitle("Count Rate Sources Approaching Detector") +
        theme_bw() +
        theme(
            legend.position = "top",
            legend.title = element_text(size=7),
            legend.text = element_text(size=7),
            strip.background = element_rect(fill = "white")
        )
)



```


```{r}



plt
```



```

hist_num$type <- as.factor(hist_num$type)

set1 <- latex2exp::TeX("     0 cm\\leq |y| <    300 cm")
set2 <- 
set3 <- 
set4 <- 

titleCharacteristics <- element_text(size = 7)

hplot <- function(position, set) {
    hist_num <- hist_num |>
        filter(type == position) |>
        ggplot() +
        scale_y_continuous(
            trans = 'log10',
            labels = scales::trans_format("log10", scales::math_format(10^.x)),
            limits = c(1e7,1e10),
            n.breaks = 5
        ) +
        geom_line(mapping = aes(x = energy,y = number)) +
        xlab("Energy (keV)") +
        ylab("Particle Histories") +
        ggtitle(set) +
        theme_clean(base_size = 10)

    return(hist_num)
}

historyPlot <- ggarrange(
    hplot(1,set1),hplot(2,set2),hplot(3,set3),hplot(4,set4),
    nrow=2,
    ncol=2
) |> annotate_figure(top = text_grob(
    "Histories Required",
    face = "bold",
    size = 15
    ))

historyPlot




```

