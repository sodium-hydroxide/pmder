

```{r}

load("~/DATA/projects/Research/r-packages/pmder/data/spectral_data.Rda")
load("~/DATA/projects/Research/r-packages/pmder/data/summary_data.Rda")
load("~/DATA/projects/Research/r-packages/pmder/data/linear_model.rda")
load("~/DATA/projects/Research/r-packages/pmder/data/earth_model.Rda")
```

```{r}



ggplot2::ggplot(data.frame(x = 1:10, y = 1:10), ggplot2::aes(x,y)) +
    ggplot2::geom_line(color = "white") +
    ggtikz::ggtikzAnnotation(paste(
    "\\tikzset{every picture/.style={line width=0.75pt}} %set default line width to 0.75pt",
    "\\begin{tikzpicture}[x=0.75pt,y=0.75pt,yscale=-1,xscale=1]",
    "%uncomment if require: \\path (0,235); %set diagram left start at 0, and has height of 235",
    "%Shape: Circle [id:dp7788878868008242]",
    "\\draw   (285.5,121) .. controls (285.5,93.39) and (307.89,71) .. (335.5,71) .. controls (363.11,71) and (385.5,93.39) .. (385.5,121) .. controls (385.5,148.61) and (363.11,171) .. (335.5,171) .. controls (307.89,171) and (285.5,148.61) .. (285.5,121) -- cycle ;",
    "%Shape: Circle [id:dp7625894053608299]",
    "\\draw  [fill={rgb, 255:red, 0; green, 0; blue, 0 }  ,fill opacity=1 ] (325.5,121) .. controls (325.5,118.24) and (327.74,116) .. (330.5,116) .. controls (333.26,116) and (335.5,118.24) .. (335.5,121) .. controls (335.5,123.76) and (333.26,126) .. (330.5,126) .. controls (327.74,126) and (325.5,123.76) .. (325.5,121) -- cycle ;",
    "%Shape: Circle [id:dp38683269305123147]",
    "\\draw  [fill={rgb, 255:red, 0; green, 0; blue, 0 }  ,fill opacity=1 ] (330.5,126) .. controls (330.5,123.24) and (332.74,121) .. (335.5,121) .. controls (338.26,121) and (340.5,123.24) .. (340.5,126) .. controls (340.5,128.76) and (338.26,131) .. (335.5,131) .. controls (332.74,131) and (330.5,128.76) .. (330.5,126) -- cycle ;",
    "%Shape: Circle [id:dp7471686518766322]",
    "\\draw  [fill={rgb, 255:red, 0; green, 0; blue, 0 }  ,fill opacity=1 ] (325.5,126) .. controls (325.5,123.24) and (327.74,121) .. (330.5,121) .. controls (333.26,121) and (335.5,123.24) .. (335.5,126) .. controls (335.5,128.76) and (333.26,131) .. (330.5,131) .. controls (327.74,131) and (325.5,128.76) .. (325.5,126) -- cycle ;",
    "%Shape: Circle [id:dp6762224007667966]",
    "\\draw  [fill={rgb, 255:red, 0; green, 0; blue, 0 }  ,fill opacity=1 ] (335.5,121) .. controls (335.5,118.24) and (337.74,116) .. (340.5,116) .. controls (343.26,116) and (345.5,118.24) .. (345.5,121) .. controls (345.5,123.76) and (343.26,126) .. (340.5,126) .. controls (337.74,126) and (335.5,123.76) .. (335.5,121) -- cycle ;",
    "%Shape: Circle [id:dp679883378964453]",
    "\\draw  [fill={rgb, 255:red, 0; green, 0; blue, 0 }  ,fill opacity=1 ] (330.5,116) .. controls (330.5,113.24) and (332.74,111) .. (335.5,111) .. controls (338.26,111) and (340.5,113.24) .. (340.5,116) .. controls (340.5,118.76) and (338.26,121) .. (335.5,121) .. controls (332.74,121) and (330.5,118.76) .. (330.5,116) -- cycle ;",
    "%Curve Lines [id:da8475002827981385]",
    "\\draw    (235,179.5) .. controls (274.6,149.8) and (295.09,199.98) .. (334.31,171.88) ;",
    "\\draw [shift={(335.5,171)}, rotate = 143.13] [color={rgb, 255:red, 0; green, 0; blue, 0 }  ][line width=0.75]    (10.93,-3.29) .. controls (6.95,-1.4) and (3.31,-0.3) .. (0,0) .. controls (3.31,0.3) and (6.95,1.4) .. (10.93,3.29)   ;",
    "%Straight Lines [id:da06814611929926717]",
    "\\draw    (335.5,171) -- (460.11,213.85) ;",
    "\\draw [shift={(462,214.5)}, rotate = 198.98] [color={rgb, 255:red, 0; green, 0; blue, 0 }  ][line width=0.75]    (10.93,-3.29) .. controls (6.95,-1.4) and (3.31,-0.3) .. (0,0) .. controls (3.31,0.3) and (6.95,1.4) .. (10.93,3.29)   ;",
    "% Text Node",
    "\\draw (220,169.4) node [anchor=north west][inner sep=0.75pt]    {$\\gamma $};",
    "% Text Node",
    "\\draw (467,201.4) node [anchor=north west][inner sep=0.75pt]    {$e^{-}$};",
    "\\end{tikzpicture}",
    sep = "\\n"
), x = "data", y = "data", panelx = -1, panely = -1)


```

```{r}


    lm_net_counts =
        ######count_rate_data_lm |>
        ggplot() +
        ggplot2::geom_line(mapping = ggplot2::aes(
            x = y_cm,
            y = net_counts_cumulative,
            color = source)) +
        ggplot2::facet_grid(
            cols = ggplot2::vars(contents),
            labeller = ggplot2::as_labeller(c(
                "m"="Scrap Metal",
                "f"="Foodstuff"
            ))
        ) +
        ggplot2::scale_color_hue(name = "Source") +
        ggplot2::xlab("Distance (cm)") +
        ggplot2::ylab("Net Counts (counts / Bq)") +
        ggplot2::ggtitle("Net Counts of Source Along Trajectory") +
        ggplot2::theme_bw() +
        ggplot2::theme(
            strip.background = ggplot2::element_rect(fill = "white")
        ),
))}

pmder_figs()a


    # Linear model time derivative
    lm_time_derivative =
        count_rate_data_lm |>
        ggplot() +
        geom_line(mapping = aes(
            x = y_cm,
            y = count_rate_derivative,
            color = source)) +
        facet_grid(
            cols = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))) +
        scale_color_hue(name = "Source") +
        xlab("Distance (cm)") +
        ylab("Count Rate Derivative (cps / Bq / s)") +
        ggtitle("Count Rate Derivative for\nSources Along Trajectory") +
        theme_bw() +
        theme(
            strip.background = element_rect(fill = "white"),
            legend.position = "top"),
    # Earth Model Diagnostics
    earth_diagnostics = ggarrange(
        ggarrange(
            earth_model_aug |>
                ggplot() +
                geom_histogram(
                    mapping = aes(x = .std.resid, y = after_stat(density)),
                    bins = bin_number(earth_model_aug$.std.resid)) +
                geom_line(
                    data = mutate(
                        data.frame(abscissa = -100:50 / 20),
                        ordinate = dnorm(abscissa)),
                    mapping = aes(x = abscissa, y = ordinate)) +
                xlab("Relative Residuals") +
                ylab("") +
                ggtitle(
                    "Distribution of Residuals",
                    subtitle = "Line indicates standard normal distribution") +
                theme_bw(),
            earth_model_aug |>
                ggplot(aes(sample = .resid)) +
                geom_qq() +
                geom_qq_line() +
                xlab("Quantiles of Standard Normal") +
                ylab("Quantiles of Residuals") +
                ggtitle(
                    "Quantile-Quantile Plot of Residuals",
                    subtitle = "Line indicates normal distribution") +
                theme_bw(),
            ncol = 2
        ),
        earth_model_aug |>
            ggplot() +
            geom_point(mapping = aes(
                x = .fitted,
                y = .resid,
                color = Es_keV,
                alpha = y_cm
            )) +
            facet_grid(
                rows = vars(contents),
                labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))
            ) +
            xlab("Fitted Values of Ln(Efficiency)") +
            ylab("Residuals of Ln(Efficiency)") +
            ggtitle("Residuals vs. Fitted Values") +
            scale_color_continuous(name = "Source\n\ \ \ Energy") +
            scale_alpha_continuous(name = "Distance") +
            theme_bw() +
            theme(
                legend.position = "top",
                legend.title = element_text(size=7),
                legend.text = element_text(size=7),
                strip.background = element_rect(fill = "white")
            ),
        nrow = 2
    ) |>
        annotate_figure(top = "Diagnostic Plots for MARS Model"),
    # Earth Comparison
    earth_comparison = earth_comparison,
    # Earth Model Contour Plot
    earth_contour = rbind(
        mutate(data.frame(
            y_cm = rep(-50:50 * 10, times = 151),
            Es_keV = rep(50:200 * 10, each = 101)), contents = "m"),
        mutate(data.frame(
            y_cm = rep(-50:50 * 10, times = 151),
            Es_keV = rep(50:200 * 10, each = 101)), contents = "f")
    ) |> predict_efficiency(method = "earth") |> ggplot(aes(x = Es_keV, y = y_cm, z = 100*(efficiency))) +
        facet_grid(
            rows = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))
        ) +
        geom_contour_filled(bins = 9) +
        scale_fill_viridis_d(
            name = "Efficiency (%)",
            option = "F",
            begin = 1,
            end = 0) +
        scale_x_continuous(expand = c(0,0)) +
        xlab("Source Energy (keV)") +
        scale_y_continuous(expand = c(0.,0.)) +
        ylab("Truck Position (cm)") +
        ggtitle(
            "Detection Efficiency for Different\nSource Energies and Positions") +
        theme_bw() +
        theme(
            legend.position = "right",
            legend.title = element_text(size=14),
            legend.text = element_text(size=12),
            strip.background = element_rect(fill = "white"),
            panel.spacing = unit(1, "lines")
        ),
    earth_count_rate =
        count_rate_data_earth |>
        ggplot() +
        # geom_linerange(mapping = aes(
        #     x = y_cm,
        #     ymin = =u_count_per_decay,
        #     ymax = u_count_per_decay,
        #     color = source)) +
        geom_line(mapping = aes(
            x = y_cm,
            y = count_rate,
            color = source)) +
        facet_grid(
            cols = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))) +
        # geom_point(
        #     data = count_rate_data_discrete,
        #     mapping = aes(x = y_cm, y = count_per_decay, color = source)) +
        # geom_pointrange(
        #     data = count_rate_data_discrete,
        #     mapping = aes(
        #         x = y_cm,
        #         y = count_per_decay,
        #         ymin = count_per_decay - u_count_per_decay,
        #         ymax = count_per_decay + u_count_per_decay,
        #         color = source),
    #     size = 0.5) +
    scale_x_continuous(
        limits = c(-1500, 1500)
    ) +
        xlab("Distance (cm)") +
        # scale_y_continuous(
        #     trans = "log10",
        #     limits = c(1e-5, 1e0),
        #     n.breaks = 7,
        #     labels = scales::trans_format("log10", scales::math_format(10^.x))) +
        ylab("Count Rate (cps / Bq)") +
        scale_color_hue(name = "Source") +
        ggtitle("Count Rate Sources Approaching Detector") +
        theme_bw() +
        theme(
            legend.position = "top",
            legend.title = element_text(size=7),
            legend.text = element_text(size=7),
            strip.background = element_rect(fill = "white")
        )
)



```


```{r}



plt
```



```

hist_num$type <- as.factor(hist_num$type)

set1 <- latex2exp::TeX("     0 cm\\leq |y| <    300 cm")
set2 <- 
set3 <- 
set4 <- 

titleCharacteristics <- element_text(size = 7)

hplot <- function(position, set) {
    hist_num <- hist_num |>
        filter(type == position) |>
        ggplot() +
        scale_y_continuous(
            trans = 'log10',
            labels = scales::trans_format("log10", scales::math_format(10^.x)),
            limits = c(1e7,1e10),
            n.breaks = 5
        ) +
        geom_line(mapping = aes(x = energy,y = number)) +
        xlab("Energy (keV)") +
        ylab("Particle Histories") +
        ggtitle(set) +
        theme_clean(base_size = 10)

    return(hist_num)
}

historyPlot <- ggarrange(
    hplot(1,set1),hplot(2,set2),hplot(3,set3),hplot(4,set4),
    nrow=2,
    ncol=2
) |> annotate_figure(top = text_grob(
    "Histories Required",
    face = "bold",
    size = 15
    ))

historyPlot




```

