

```{r}

load("~/DATA/projects/Research/r-packages/pmder/data/spectral_data.Rda")
load("~/DATA/projects/Research/r-packages/pmder/data/summary_data.Rda")
load("~/DATA/projects/Research/r-packages/pmder/data/linear_model.rda")
load("~/DATA/projects/Research/r-packages/pmder/data/earth_model.Rda")
```

```{r}


plt

```

```{r}


    lm_net_counts =
        ######count_rate_data_lm |>
        ggplot() +
        ggplot2::geom_line(mapping = ggplot2::aes(
            x = y_cm,
            y = net_counts_cumulative,
            color = source)) +
        ggplot2::facet_grid(
            cols = ggplot2::vars(contents),
            labeller = ggplot2::as_labeller(c(
                "m"="Scrap Metal",
                "f"="Foodstuff"
            ))
        ) +
        ggplot2::scale_color_hue(name = "Source") +
        ggplot2::xlab("Distance (cm)") +
        ggplot2::ylab("Net Counts (counts / Bq)") +
        ggplot2::ggtitle("Net Counts of Source Along Trajectory") +
        ggplot2::theme_bw() +
        ggplot2::theme(
            strip.background = ggplot2::element_rect(fill = "white")
        ),
))}

pmder_figs()a


    # Linear model time derivative
    lm_time_derivative =
        count_rate_data_lm |>
        ggplot() +
        geom_line(mapping = aes(
            x = y_cm,
            y = count_rate_derivative,
            color = source)) +
        facet_grid(
            cols = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))) +
        scale_color_hue(name = "Source") +
        xlab("Distance (cm)") +
        ylab("Count Rate Derivative (cps / Bq / s)") +
        ggtitle("Count Rate Derivative for\nSources Along Trajectory") +
        theme_bw() +
        theme(
            strip.background = element_rect(fill = "white"),
            legend.position = "top"),
    # Earth Model Diagnostics
    earth_diagnostics = ggarrange(
        ggarrange(
            earth_model_aug |>
                ggplot() +
                geom_histogram(
                    mapping = aes(x = .std.resid, y = after_stat(density)),
                    bins = bin_number(earth_model_aug$.std.resid)) +
                geom_line(
                    data = mutate(
                        data.frame(abscissa = -100:50 / 20),
                        ordinate = dnorm(abscissa)),
                    mapping = aes(x = abscissa, y = ordinate)) +
                xlab("Relative Residuals") +
                ylab("") +
                ggtitle(
                    "Distribution of Residuals",
                    subtitle = "Line indicates standard normal distribution") +
                theme_bw(),
            earth_model_aug |>
                ggplot(aes(sample = .resid)) +
                geom_qq() +
                geom_qq_line() +
                xlab("Quantiles of Standard Normal") +
                ylab("Quantiles of Residuals") +
                ggtitle(
                    "Quantile-Quantile Plot of Residuals",
                    subtitle = "Line indicates normal distribution") +
                theme_bw(),
            ncol = 2
        ),
        earth_model_aug |>
            ggplot() +
            geom_point(mapping = aes(
                x = .fitted,
                y = .resid,
                color = Es_keV,
                alpha = y_cm
            )) +
            facet_grid(
                rows = vars(contents),
                labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))
            ) +
            xlab("Fitted Values of Ln(Efficiency)") +
            ylab("Residuals of Ln(Efficiency)") +
            ggtitle("Residuals vs. Fitted Values") +
            scale_color_continuous(name = "Source\n\ \ \ Energy") +
            scale_alpha_continuous(name = "Distance") +
            theme_bw() +
            theme(
                legend.position = "top",
                legend.title = element_text(size=7),
                legend.text = element_text(size=7),
                strip.background = element_rect(fill = "white")
            ),
        nrow = 2
    ) |>
        annotate_figure(top = "Diagnostic Plots for MARS Model"),
    # Earth Comparison
    earth_comparison = earth_comparison,
    # Earth Model Contour Plot
    earth_contour = rbind(
        mutate(data.frame(
            y_cm = rep(-50:50 * 10, times = 151),
            Es_keV = rep(50:200 * 10, each = 101)), contents = "m"),
        mutate(data.frame(
            y_cm = rep(-50:50 * 10, times = 151),
            Es_keV = rep(50:200 * 10, each = 101)), contents = "f")
    ) |> predict_efficiency(method = "earth") |> ggplot(aes(x = Es_keV, y = y_cm, z = 100*(efficiency))) +
        facet_grid(
            rows = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))
        ) +
        geom_contour_filled(bins = 9) +
        scale_fill_viridis_d(
            name = "Efficiency (%)",
            option = "F",
            begin = 1,
            end = 0) +
        scale_x_continuous(expand = c(0,0)) +
        xlab("Source Energy (keV)") +
        scale_y_continuous(expand = c(0.,0.)) +
        ylab("Truck Position (cm)") +
        ggtitle(
            "Detection Efficiency for Different\nSource Energies and Positions") +
        theme_bw() +
        theme(
            legend.position = "right",
            legend.title = element_text(size=14),
            legend.text = element_text(size=12),
            strip.background = element_rect(fill = "white"),
            panel.spacing = unit(1, "lines")
        ),
    earth_count_rate =
        count_rate_data_earth |>
        ggplot() +
        # geom_linerange(mapping = aes(
        #     x = y_cm,
        #     ymin = =u_count_per_decay,
        #     ymax = u_count_per_decay,
        #     color = source)) +
        geom_line(mapping = aes(
            x = y_cm,
            y = count_rate,
            color = source)) +
        facet_grid(
            cols = vars(contents),
            labeller = as_labeller(c("m"="Scrap Metal", "f"="Foodstuff"))) +
        # geom_point(
        #     data = count_rate_data_discrete,
        #     mapping = aes(x = y_cm, y = count_per_decay, color = source)) +
        # geom_pointrange(
        #     data = count_rate_data_discrete,
        #     mapping = aes(
        #         x = y_cm,
        #         y = count_per_decay,
        #         ymin = count_per_decay - u_count_per_decay,
        #         ymax = count_per_decay + u_count_per_decay,
        #         color = source),
    #     size = 0.5) +
    scale_x_continuous(
        limits = c(-1500, 1500)
    ) +
        xlab("Distance (cm)") +
        # scale_y_continuous(
        #     trans = "log10",
        #     limits = c(1e-5, 1e0),
        #     n.breaks = 7,
        #     labels = scales::trans_format("log10", scales::math_format(10^.x))) +
        ylab("Count Rate (cps / Bq)") +
        scale_color_hue(name = "Source") +
        ggtitle("Count Rate Sources Approaching Detector") +
        theme_bw() +
        theme(
            legend.position = "top",
            legend.title = element_text(size=7),
            legend.text = element_text(size=7),
            strip.background = element_rect(fill = "white")
        )
)



```

